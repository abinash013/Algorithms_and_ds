/*

Given a binary tree, connect the nodes that are at same level.Structure of the given Binary Tree node is like following.

struct Node
{
      int data;
      Node* left;
      Node* right;
      Node* nextRight;
}
Initially, all the nextRight pointers point to garbage values. Your function should set these pointers to point next right for each node.
       10                       10 ------> NULL
      / \                       /      \
     3   5       =>     3 ------> 5 --------> NULL
    / \     \               /  \           \
   4   1   2          4 --> 1 -----> 2 -------> NULL








*/


/* struct Node
{
  int data;
  Node *left,  *right;
  Node *nextRight;  // This has garbage value in input trees
}; */


SOLUTION




// Should set the nextRight for all nodes
void connectTree(Node* p){
    if(!p){
        return;
    }
    if(p->left){
        p->left->nextRight=p->right;

    }
    if(p->right){
        p->right->nextRight = (p->nextRight)?(p->nextRight->left):NULL;
        
    }
    connectTree(p->left);
    connectTree(p->right);
}

void connect(Node *p)
{
   // Your Code Here
   if(p == NULL){
       return;
   }
   queue<Node* >q;
   q.push(p);
   while(!q.empty()){
       int size=q.size();
       Node* prev = NULL;
       while(size--){
           
           Node* temp = q.front();
           q.pop();
           if(temp->left){
               q.push(temp->left);
           }
           if(temp->right){
               q.push(temp->right);
           }
           if(prev != NULL){
               prev->nextRight = temp;
           }
           prev = temp;
           
           
       }
       prev->nextRight = NULL;
   }
}