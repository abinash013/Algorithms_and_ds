#include <iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
/*

sort the array in increasing order
loop with i=n-1 until i>=0
left=0,right=i-1 which are the indices of the array
while left<right:
  if ar[i]==ar[left]+ar[right]:
    left++
    right--
    count++
  else if ar[left]+ar[right] >ar[i]:
    right--
  else:
    left++
end while
end loop

return count

*/

int main() {
	//code
	int T;
	cin>>T;
	while(T--){
	    int n;
	    cin>>n;
	    vector <int> vec(n);
	    int arr[n],count=0,flag=0,temp;
	    for(int i=0;i<n;i++){
	        cin>>vec[i];
	    }
	    sort(vec.begin(),vec.end());
	    for(int i=n-1;i>=0;i--){
	        int left=0,right=i-1;
	        while(left<right){
	            temp=vec[left]+vec[right];
	            if(temp==vec[i]){
	                ++left;
	                --right;
	                ++count;
	            }
	            else if(temp<vec[i]){
	                left++;
	                
	            }
	            else{
	                right--;
	            }
	        }
	        
	        
	        
	        
	        
	        
	        
	    }
	    if(count>0){
	        cout<<count<<endl;
	    }
	    else{
	        cout<<"-1"<<endl;
	    }
	    
	    
	    /* inefficent using dp O(n^3)
	    int dp[n][n];
	    for(int i=0;i<n;i++){
	        for(int j=0;j<n;j++){
	            if(j<=i){
	                continue;
	            }
	            else{
	                dp[i][j]=arr[i]+arr[j];
	            }
	        
	        for(int k=0;k<n;k++){
	            if(dp[i][j]==arr[k]){
	                ++count;
	            }
	        }
	        }
	    }
	    if(count==0){
	        cout<<"-1"<<endl;
	    }
	    else{
	        cout<<count<<endl;
	    }
	    */
	}
	return 0;
}