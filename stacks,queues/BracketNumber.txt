#include <iostream>
#include<bits/stdc++.h>
using namespace std;
/*
Given an expression exp of length n consisting of some brackets. The task is to print the bracket numbers when the expression is being parsed.

Input:
The first line contains an integer T, the number of test cases. For each test case, there is a string exp containing the expression.

Output:
For each test case, the output is the bracket numbers of the expression.


Input:
3​
(a+(b*c))+(d/e)​
((())(()))
((((()
Output:
1 2 2 1 3 3
1 2 3 3 2 4 5 5 4 1
1 2 3 4 5 5



*/
int main() {
	//code
	int t;
	cin>>t;
	while(t--){
	    string s;
	    cin>>s;
	    char temp;
	    stack<pair<int,char>> stk;
	    pair<int,char> p;                 //No need of pair .can be obtained by pushing just the number too.
	    int start=0,end=0;
	    for(int i=0;i<s.length();i++){
	        if(s[i]=='('){
	            ++start;
	            stk.push(make_pair(start,'('));
                cout<<start<<" ";
	        }
	        else if(s[i]==')'){
	            p=stk.top();
	            cout<<p.first<<" ";
	            stk.pop();
	            
	        }
	    }
	    cout<<endl;
	    
	    
	    
	    
	    
	}
	return 0;
}