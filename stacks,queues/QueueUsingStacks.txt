#include<iostream>
using namespace std;


/*

Implementing queue using two stacks
stack s1 is used to push the elements in
stack s2 is used to process it [pop]
Before processing either of the stacks elements from the other
stack is moved to it and then pop/push is done



*/
class StackQueue{
private:   
    // These are STL stacks ( http://goo.gl/LxlRZQ )
    stack<int> s1;
    stack<int> s2;
public:
    void push(int);
    int pop();
};
int main(){
   int T;
   cin>>T;
   while(T--){
      StackQueue *sq=new StackQueue();
      int q;
      cin>>q;
      while(q--){
      int type=0;
      cin>>type;
      if(type==1){
            int a;
            cin>>a;
            sq->push(a);
      }
      else if(type==2){
              cout<<sq->pop()<<" ";
         }
       }
       cout<<endl;
      }

return 0;
}



/* The method push to push element into the queue */
void StackQueue :: push(int x)
 {
        // Your Code
        while(!s2.empty()){
            s1.push(s2.top());
            s2.pop();
        }
        s1.push(x);
 }

/*The method pop which return the element poped out of the queue*/
int StackQueue :: pop()
{
        // Your Code 
        while(!s1.empty()){
            s2.push(s1.top());
            s1.pop();
        }
        if(s2.empty()){
            return -1;
        }
        int t=s2.top();
        s2.pop();
        return t;
}
