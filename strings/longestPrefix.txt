#include <iostream>
#include<string.h>
#include<cstring>
using namespace std;
/*

Given a array of N strings, find the longest common prefix among all strings present in the array.
Prefix is a substring starting from first index

SOLUTION:
x<-1st string
flag <- 1
while i<-1 to n-1 do

s<-input string
if(flag)
    x<- substring(x,s)   //returns prefix substring else returns "null"
    if x=="null":
        flag=0
end loop
if flag:
    print x
else
    print -1



*/
string substring(string x, string s){
    int end=0,flag=0,i;
    char temp[x.length()];
    for(i=0;i<x.length();i++){
        if(x[i]==s[i]){
            temp[i]=x[i];
            temp[i+1]='\0';           //end pertains to last prefix index
            end=i;                    //next temp index assigned to zero because when it is the last prefix index, in the next subsequent operations
            flag=1;                   // while returning string it returns every char of assigned temp length which would be garbage if there exist 
        }                             //unused char bit so we mark it by '\0'
                                      //We know that string reads char array until it encounters '\0' while assigning
        else{
            temp[i]='\0';
            break;
        }
    }
    char r[end+1];
    if(!flag){
        return "null";
    }
    string re;
    re=temp;
    return re;
}


int main() {
	//code
	int T;
	cin>>T;
	while(T--){
	    int n;
	    cin>>n;
	    string x,s;
	    cin>>x;
	    int flag=1;
	    for(int i=1;i<n;i++){
	        cin>>s;
	        if(flag){
	        x=substring(x,s);
	        if(x=="null"){
	            flag=0;
	        }
	        }
	        
	       
	    }
	    if(flag){
	        cout<<x<<endl;
	    }
	    else{
	        cout<<"-1"<<endl;
	    }
	    
	}

	return 0;
}